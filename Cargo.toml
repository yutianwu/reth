[workspace]
members = [
    "bin/reth/",
    "crates/blockchain-tree/",
    "crates/cli/runner/",
    "crates/config/",
    "crates/consensus/auto-seal/",
    "crates/consensus/beacon/",
    "crates/ethereum/consensus/",
    "crates/consensus/common/",
    "crates/consensus/consensus/",
    "crates/ethereum-forks/",
    "crates/e2e-test-utils/",
    "crates/etl/",
    "crates/evm/",
    "crates/ethereum/evm",
    "crates/exex/",
    "crates/interfaces/",
    "crates/metrics/",
    "crates/metrics/metrics-derive/",
    "crates/net/common/",
    "crates/net/discv4/",
    "crates/net/discv5/",
    "crates/net/dns/",
    "crates/net/downloaders/",
    "crates/net/ecies/",
    "crates/net/eth-wire/",
    "crates/net/eth-wire-types",
    "crates/net/nat/",
    "crates/net/network/",
    "crates/net/network-api/",
    "crates/net/types/",
    "crates/payload/basic/",
    "crates/payload/builder/",
    "crates/payload/ethereum/",
    "crates/payload/optimism/",
    "crates/payload/validator/",
    "crates/primitives/",
    "crates/prune/",
    "crates/revm/",
    "crates/node/events/",
    "crates/rpc/ipc/",
    "crates/rpc/rpc/",
    "crates/rpc/rpc-api/",
    "crates/rpc/rpc-builder/",
    "crates/rpc/rpc-engine-api/",
    "crates/rpc/rpc-testing-util/",
    "crates/rpc/rpc-types/",
    "crates/rpc/rpc-types-compat/",
    "crates/engine-primitives/",
    "crates/ethereum/engine-primitives/",
    "crates/ethereum/node",
    "crates/node/builder/",
    "crates/optimism/consensus",
    "crates/optimism/node/",
    "crates/optimism/evm/",
    "crates/node-core/",
    "crates/node/api/",
    "crates/stages/",
    "crates/stages-api",
    "crates/static-file/",
    "crates/storage/codecs/",
    "crates/storage/codecs/derive/",
    "crates/storage/db/",
    "crates/storage/libmdbx-rs/",
    "crates/storage/libmdbx-rs/mdbx-sys/",
    "crates/storage/nippy-jar/",
    "crates/storage/provider/",
    "crates/tasks/",
    "crates/tokio-util/",
    "crates/tracing/",
    "crates/transaction-pool/",
    "crates/trie/",
    "crates/trie-parallel/",
    "examples/node-custom-rpc/",
    "examples/beacon-api-sse/",
    "examples/node-event-hooks/",
    "examples/custom-evm/",
    "examples/custom-engine-types/",
    "examples/custom-node-components/",
    "examples/custom-dev-node/",
    "examples/custom-payload-builder/",
    "examples/manual-p2p/",
    "examples/network/",
    "examples/network-txpool/",
    "examples/rpc-db/",
    "examples/txpool-tracing/",
    "examples/polygon-p2p/",
    "examples/custom-inspector/",
    "examples/exex/*",
    "examples/db-access",
    "testing/ef-tests/",
    "testing/testing-utils",
]
default-members = ["bin/reth"]

# Explicitly set the resolver to version 2, which is the default for packages with edition >= 2021
# https://doc.rust-lang.org/edition-guide/rust-2021/default-cargo-resolver.html
resolver = "2"

[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.missing_docs = "warn"
rust.unreachable_pub = "warn"
rust.unused_must_use = "deny"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rustdoc.all = "warn"

[workspace.lints.clippy]
# These are some of clippy's nursery (i.e., experimental) lints that we like.
# By default, nursery lints are allowed. Some of the lints below have made good
# suggestions which we fixed. The others didn't have any findings, so we can
# assume they don't have that many false positives. Let's enable them to
# prevent future problems.
branches_sharing_code = "warn"
clear_with_drain = "warn"
derive_partial_eq_without_eq = "warn"
empty_line_after_outer_attr = "warn"
equatable_if_let = "warn"
imprecise_flops = "warn"
iter_on_empty_collections = "warn"
iter_with_drain = "warn"
large_stack_frames = "warn"
manual_clamp = "warn"
mutex_integer = "warn"
needless_pass_by_ref_mut = "warn"
nonstandard_macro_braces = "warn"
or_fun_call = "warn"
path_buf_push_overwrite = "warn"
read_zero_byte_vec = "warn"
redundant_clone = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
transmute_undefined_repr = "warn"
trivial_regex = "warn"
tuple_array_conversions = "warn"
uninhabited_references = "warn"
unused_peekable = "warn"
unused_rounding = "warn"
useless_let_if_seq = "warn"

# These are nursery lints which have findings. Allow them for now. Some are not
# quite mature enough for use in our codebase and some we don't really want.
# Explicitly listing should make it easier to fix in the future.
as_ptr_cast_mut = "allow"
cognitive_complexity = "allow"
collection_is_never_read = "allow"
debug_assert_with_mut_call = "allow"
empty_line_after_doc_comments = "allow"
fallible_impl_from = "allow"
future_not_send = "allow"
iter_on_single_items = "allow"
missing_const_for_fn = "allow"
needless_collect = "allow"
non_send_fields_in_send_ty = "allow"
option_if_let_else = "allow"
redundant_pub_crate = "allow"
significant_drop_in_scrutinee = "allow"
significant_drop_tightening = "allow"
string_lit_as_bytes = "allow"
type_repetition_in_bounds = "allow"
unnecessary_struct_initialization = "allow"
use_self = "allow"

[workspace.package]
version = "0.2.0-beta.7"
edition = "2021"
rust-version = "1.76"
license = "MIT OR Apache-2.0"
homepage = "https://paradigmxyz.github.io/reth"
repository = "https://github.com/paradigmxyz/reth"
exclude = [".github/"]

# Speed up tests.
[profile.dev.package]
proptest.opt-level = 3
rand_xorshift.opt-level = 3
rand_chacha.opt-level = 3
unarray.opt-level = 3

# Meant for testing - all optimizations, but with debug assertions and overflow checks.
[profile.hivetests]
inherits = "test"
opt-level = 3
lto = "thin"

[profile.release]
lto = "thin"
strip = "debuginfo"

# Like release, but with full debug symbols. Useful for e.g. `perf`.
[profile.debug-fast]
inherits = "release"
strip = "none"
debug = true

[profile.maxperf]
inherits = "release"
lto = "fat"
codegen-units = 1
incremental = false

[workspace.dependencies]
# reth
reth = { path = "bin/reth" }
reth-auto-seal-consensus = { path = "crates/consensus/auto-seal" }
reth-basic-payload-builder = { path = "crates/payload/basic" }
reth-beacon-consensus = { path = "crates/consensus/beacon" }
reth-ethereum-consensus = { path = "crates/ethereum/consensus" }
reth-blockchain-tree = { path = "crates/blockchain-tree" }
reth-cli-runner = { path = "crates/cli/runner" }
reth-codecs = { path = "crates/storage/codecs" }
reth-config = { path = "crates/config" }
reth-consensus = { path = "crates/consensus/consensus" }
reth-consensus-common = { path = "crates/consensus/common" }
reth-db = { path = "crates/storage/db" }
reth-discv4 = { path = "crates/net/discv4" }
reth-discv5 = { path = "crates/net/discv5" }
reth-dns-discovery = { path = "crates/net/dns" }
reth-e2e-test-utils = { path = "crates/e2e-test-utils" }
reth-engine-primitives = { path = "crates/engine-primitives" }
reth-ethereum-engine-primitives = { path = "crates/ethereum/engine-primitives" }
reth-node-builder = { path = "crates/node/builder" }
reth-node-ethereum = { path = "crates/ethereum/node" }
reth-node-optimism = { path = "crates/optimism/node" }
reth-evm-optimism = { path = "crates/optimism/evm" }
reth-node-core = { path = "crates/node-core" }
reth-node-api = { path = "crates/node/api" }
reth-downloaders = { path = "crates/net/downloaders" }
reth-ecies = { path = "crates/net/ecies" }
reth-eth-wire = { path = "crates/net/eth-wire" }
reth-eth-wire-types = { path = "crates/net/eth-wire-types" }
reth-ethereum-forks = { path = "crates/ethereum-forks" }
reth-ethereum-payload-builder = { path = "crates/payload/ethereum" }
reth-etl = { path = "crates/etl" }
reth-evm = { path = "crates/evm" }
reth-evm-ethereum = { path = "crates/ethereum/evm" }
reth-exex = { path = "crates/exex" }
reth-optimism-payload-builder = { path = "crates/payload/optimism" }
reth-interfaces = { path = "crates/interfaces" }
reth-ipc = { path = "crates/rpc/ipc" }
reth-libmdbx = { path = "crates/storage/libmdbx-rs" }
reth-mdbx-sys = { path = "crates/storage/libmdbx-rs/mdbx-sys" }
reth-metrics = { path = "crates/metrics" }
reth-metrics-derive = { path = "crates/metrics/metrics-derive" }
reth-net-common = { path = "crates/net/common" }
reth-net-nat = { path = "crates/net/nat" }
reth-network = { path = "crates/net/network" }
reth-network-api = { path = "crates/net/network-api" }
reth-network-types = { path = "crates/net/types" }
reth-nippy-jar = { path = "crates/storage/nippy-jar" }
reth-payload-builder = { path = "crates/payload/builder" }
reth-payload-validator = { path = "crates/payload/validator" }
reth-primitives = { path = "crates/primitives" }
reth-provider = { path = "crates/storage/provider" }
reth-prune = { path = "crates/prune" }
reth-revm = { path = "crates/revm" }
reth-rpc = { path = "crates/rpc/rpc" }
reth-rpc-api = { path = "crates/rpc/rpc-api" }
reth-rpc-api-testing-util = { path = "crates/rpc/rpc-testing-util" }
reth-rpc-builder = { path = "crates/rpc/rpc-builder" }
reth-rpc-engine-api = { path = "crates/rpc/rpc-engine-api" }
reth-rpc-types = { path = "crates/rpc/rpc-types" }
reth-rpc-types-compat = { path = "crates/rpc/rpc-types-compat" }
reth-stages = { path = "crates/stages" }
reth-stages-api = { path = "crates/stages-api" }
reth-static-file = { path = "crates/static-file" }
reth-tasks = { path = "crates/tasks" }
reth-tokio-util = { path = "crates/tokio-util" }
reth-tracing = { path = "crates/tracing" }
reth-transaction-pool = { path = "crates/transaction-pool" }
reth-trie = { path = "crates/trie" }
reth-trie-parallel = { path = "crates/trie-parallel" }
reth-optimism-consensus = { path = "crates/optimism/consensus" }
reth-node-events = { path = "crates/node/events" }
reth-testing-utils = { path = "testing/testing-utils" }

# revm
revm = { version = "8.0.0", features = ["std", "secp256k1"], default-features = false }
revm-primitives = { version = "3.1.0", features = ["std"], default-features = false }
revm-inspectors = { git = "https://github.com/paradigmxyz/evm-inspectors", rev = "7168ac5" }

# eth
alloy-chains = "0.1.15"
alloy-primitives = "0.7.2"
alloy-dyn-abi = "0.7.2"
alloy-sol-types = "0.7.2"
alloy-rlp = "0.3.4"
alloy-trie = "0.3.1"
alloy-rpc-types = { git = "https://github.com/alloy-rs/alloy", rev = "77c1240" }
alloy-rpc-types-anvil = { git = "https://github.com/alloy-rs/alloy", rev = "77c1240" }
alloy-rpc-types-trace = { git = "https://github.com/alloy-rs/alloy", rev = "77c1240" }
alloy-rpc-types-engine = { git = "https://github.com/alloy-rs/alloy", rev = "77c1240" }
alloy-rpc-types-beacon = { git = "https://github.com/alloy-rs/alloy", rev = "77c1240" }
alloy-genesis = { git = "https://github.com/alloy-rs/alloy", rev = "77c1240" }
alloy-node-bindings = { git = "https://github.com/alloy-rs/alloy", rev = "77c1240" }
alloy-provider = { git = "https://github.com/alloy-rs/alloy", rev = "77c1240", default-features = false, features = [
    "reqwest",
] }
alloy-eips = { git = "https://github.com/alloy-rs/alloy", default-features = false, rev = "77c1240" }
alloy-signer = { git = "https://github.com/alloy-rs/alloy", rev = "77c1240" }
alloy-signer-wallet = { git = "https://github.com/alloy-rs/alloy", rev = "77c1240" }
alloy-network = { git = "https://github.com/alloy-rs/alloy", rev = "77c1240" }
alloy-consensus = { git = "https://github.com/alloy-rs/alloy", rev = "77c1240" }

# misc
auto_impl = "1"
aquamarine = "0.5"
bytes = "1.5"
bitflags = "2.4"
clap = "4"
dashmap = "5.5"
derive_more = "0.99.17"
fdlimit = "0.3.0"
eyre = "0.6"
tracing = "0.1.0"
tracing-appender = "0.2"
thiserror = "1.0"
serde_json = "1.0.94"
serde = { version = "1.0", default-features = false }
serde_with = "3.3.0"
humantime = "2.1"
humantime-serde = "1.1"
rand = "0.8.5"
rustc-hash = "1.1.0"
schnellru = "0.2"
strum = "0.26"
rayon = "1.7"
itertools = "0.12"
parking_lot = "0.12"
# Needed for `metrics-macro` to resolve the crate using `::metrics` notation
metrics = "0.21.1"
modular-bitfield = "0.11.2"
once_cell = "1.17"
syn = "2.0"
nybbles = "0.2.1"
smallvec = "1"
dyn-clone = "1.0.17"
sha2 = { version = "0.10", default-features = false }
paste = "1.0"
url = "2.3"

# proc-macros
proc-macro2 = "1.0"
quote = "1.0"

# tokio
tokio-stream = "0.1.11"
tokio = { version = "1.21", default-features = false }
tokio-util = { version = "0.7.4", features = ["codec"] }

# async
async-stream = "0.3"
async-trait = "0.1.68"
futures = "0.3.26"
pin-project = "1.0.12"
futures-util = "0.3.25"
hyper = "0.14.25"
reqwest = { version = "0.12", default-features = false }
tower = "0.4"
tower-http = "0.4"
http = "0.2.8"
http-body = "0.4.5"

# p2p
discv5 = "0.6.0"
igd-next = "0.14.3"

# rpc
jsonrpsee = "0.22"
jsonrpsee-core = "0.22"
jsonrpsee-types = "0.22"

# crypto
secp256k1 = { version = "0.28", default-features = false, features = [
    "global-context",
    "recovery",
] }
# TODO: Remove `k256` feature: https://github.com/sigp/enr/pull/74
enr = { version = "0.12.0", default-features = false, features = ["k256", "rust-secp256k1"] }

# for eip-4844
c-kzg = "1.0.0"

# config
confy = "0.6"
toml = "0.8"

# misc-testing
arbitrary = "1.3"
assert_matches = "1.5.0"
tempfile = "3.8"
criterion = "0.5"
pprof = "0.13"
proptest = "1.4"
proptest-derive = "0.4"
serial_test = "3"
similar-asserts = "1.5.0"
test-fuzz = "5"

[patch.crates-io]
revm = { git = "https://github.com/bnb-chain/revm.git", rev = "2f38e6c" }
revm-primitives = { git = "https://github.com/bnb-chain/revm.git", rev = "2f38e6c" }
alloy-chains = { git = "https://github.com/j75689/alloy-rs-chains", rev = "ddf6cffc23d60c267c0dada3066b1f0b802ed7f9" }