[package]
name = "reth-primitives"
version.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
description = "Commonly used types in reth."

[lints]
workspace = true

[dependencies]
# reth
reth-codecs.workspace = true
reth-ethereum-forks.workspace = true
reth-network-types.workspace = true
reth-static-file-types.workspace = true
revm.workspace = true
revm-primitives = { workspace = true, features = ["serde"] }

# ethereum
alloy-chains = { workspace = true, features = ["serde", "rlp"] }
alloy-consensus = { workspace = true, features = ["arbitrary", "serde"] }
alloy-primitives = { workspace = true, features = ["rand", "rlp"] }
alloy-rlp = { workspace = true, features = ["arrayvec"] }
alloy-trie = { workspace = true, features = ["serde"] }
alloy-rpc-types = { workspace = true, optional = true }
alloy-genesis.workspace = true
alloy-eips = { workspace = true, features = ["serde"] }
nybbles = { workspace = true, features = ["serde", "rlp"] }

# crypto
secp256k1 = { workspace = true, features = [
    "global-context",
    "recovery",
    "rand",
] }
# for eip-4844
c-kzg = { workspace = true, features = ["serde"], optional = true }

# misc
bytes.workspace = true
byteorder = "1"
derive_more.workspace = true
itertools.workspace = true
modular-bitfield.workspace = true
once_cell.workspace = true
rayon.workspace = true
serde.workspace = true
serde_json.workspace = true
tempfile = { workspace = true, optional = true }
thiserror.workspace = true
zstd = { version = "0.13", features = ["experimental"], optional = true }
roaring = "0.10.2"

# `test-utils` feature
hash-db = { version = "~0.15", optional = true }
plain_hasher = { version = "0.2", optional = true }

# arbitrary utils
arbitrary = { workspace = true, features = ["derive"], optional = true }
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }
log = "0.4.21"
tracing = "0.1.40"

[dev-dependencies]
# eth
revm-primitives = { workspace = true, features = ["arbitrary"] }
nybbles = { workspace = true, features = ["arbitrary"] }
alloy-trie = { workspace = true, features = ["arbitrary"] }
alloy-eips = { workspace = true, features = ["arbitrary"] }

assert_matches.workspace = true
arbitrary = { workspace = true, features = ["derive"] }
proptest.workspace = true
proptest-derive.workspace = true
rand.workspace = true
serde_json.workspace = true
test-fuzz.workspace = true
toml.workspace = true
triehash = "0.8"

hash-db = "~0.15"
plain_hasher = "0.2"

sucds = "0.8.1"

criterion.workspace = true
pprof = { workspace = true, features = [
    "flamegraph",
    "frame-pointer",
    "criterion",
] }
secp256k1.workspace = true

[features]
default = ["c-kzg", "zstd-codec"]
asm-keccak = ["alloy-primitives/asm-keccak"]
arbitrary = [
    "revm-primitives/arbitrary",
    "reth-ethereum-forks/arbitrary",
    "nybbles/arbitrary",
    "alloy-trie/arbitrary",
    "alloy-chains/arbitrary",
    "alloy-eips/arbitrary",
    "dep:arbitrary",
    "dep:proptest",
    "dep:proptest-derive",
    "zstd-codec",
]
c-kzg = [
    "dep:c-kzg",
    "revm/c-kzg",
    "revm-primitives/c-kzg",
    "dep:tempfile",
    "alloy-eips/kzg",
]
zstd-codec = ["dep:zstd"]
clap = ["reth-static-file-types/clap"]
optimism = [
    "reth-codecs/optimism",
    "reth-ethereum-forks/optimism",
    "revm/optimism",
]
opbnb = [
    "reth-ethereum-forks/opbnb",
    "revm/opbnb",
]

alloy-compat = ["alloy-rpc-types"]
test-utils = ["dep:plain_hasher", "dep:hash-db"]

[[bench]]
name = "recover_ecdsa_crit"
harness = false

[[bench]]
name = "validate_blob_tx"
required-features = ["arbitrary", "c-kzg"]
harness = false

[[bench]]
name = "trie_root"
required-features = ["arbitrary", "test-utils"]
harness = false

[[bench]]
name = "integer_list"
harness = false
